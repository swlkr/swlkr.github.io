<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on swlkr</title>
    <link>http://swlkr.github.io/posts/</link>
    <description>Recent content in Posts on swlkr</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 13 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="http://swlkr.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ruby on Rails&#39; Conceptual Compression is a Lie</title>
      <link>http://swlkr.github.io/posts/2022-05-13-conceptual-compression-is-a-lie/</link>
      <pubDate>Fri, 13 May 2022 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/2022-05-13-conceptual-compression-is-a-lie/</guid>
      <description>Ruby on Rails&#39; Conceputal Compression is a Lie One of rails&#39; core things is conceptual compression.
That is a lie.
When I first got into web development around ~2009, it was two years after I had graduated with a degree in computer engineering, so you could say it was a career change. The hot framework of the day was ruby on rails, so I attempted to learn it. Keep in mind I didn&amp;rsquo;t know what SQL was or even what HTTP was, I was fresh out of college, with at most systems level programming knowledge, more FPGA knowledge than programming really.</description>
    </item>
    
    <item>
      <title>Rails Docker Development</title>
      <link>http://swlkr.github.io/posts/2022-02-02-rails-docker-development/</link>
      <pubDate>Wed, 02 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/2022-02-02-rails-docker-development/</guid>
      <description>How to develop ruby on rails on docker I hate the idea that if I ever have to switch to another computer or something, like for example from my macbook pro to a framework laptop running mint or popOS or something, I&amp;rsquo;ll have to set my whole dev environment up again. That stinks, I don&amp;rsquo;t want that. So I use docker in development AND docker on the server via dokku. I&amp;rsquo;m always looking for better container runtimes like podman or colima but until I get to a completely linux dev environment, I&amp;rsquo;ll stick with docker desktop.</description>
    </item>
    
    <item>
      <title>A Rails Dockerfile</title>
      <link>http://swlkr.github.io/posts/2022-01-31-dumb-rails-dockerfile/</link>
      <pubDate>Mon, 31 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/2022-01-31-dumb-rails-dockerfile/</guid>
      <description>A Rails Dockerfile I recently switched back to rails to actually ship some websites. I don&amp;rsquo;t use rbenv or anything like that on my development machine, I use Docker everywhere. Here&amp;rsquo;s a naive Dockerfile I&amp;rsquo;ve been using in development:
FROM docker.io/library/ruby:3.0.3-slim RUN apt-get update -qq &amp;amp;&amp;amp; apt-get install -y --no-install-recommends curl build-essential git-core libjemalloc2 libsqlite3-dev &amp;amp;&amp;amp; rm -rf /var/lib/apt/lists/* ENV LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libjemalloc.so.2 ARG USER=app ARG GROUP=app ARG UID=1101 ARG GID=1101 RUN groupadd --gid $GID $GROUP RUN useradd --uid $UID --gid $GID --groups $GROUP -ms /bin/bash $USER RUN mkdir -p /var/app RUN chown -R $USER:$GROUP /var/app USER $USER WORKDIR /var/app COPY --chown=$USER Gemfile* /var/app/ RUN bundle install COPY --chown=$USER .</description>
    </item>
    
    <item>
      <title>I made another web framework</title>
      <link>http://swlkr.github.io/posts/2022-01-12-made-another-webframework/</link>
      <pubDate>Wed, 12 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/2022-01-12-made-another-webframework/</guid>
      <description>I made another web framework Yes, there’s something wrong with me and i swear this is the last one.
Not totally satisfied with rails but wanted to get most of the advantages of the ruby ecosystem, I made a “rails lite” (like sqlite) and I named it radical. It’s not really for anyone but it’s there if anyone wants to use it, go right ahead. Some high level features:
 models views controllers no singular/plural requirements optional assets/bundling default strict csp config in fact only resource routes (from rails) are supported only supports one level nested routes  I actually really like it, but I don&amp;rsquo;t think I have the time or the energy to sink into another open source ruby web framework.</description>
    </item>
    
    <item>
      <title>Sane CSS</title>
      <link>http://swlkr.github.io/posts/2021-10-13-sane-css/</link>
      <pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/2021-10-13-sane-css/</guid>
      <description>A sane way to organize your css There are quite a few ways to organize your css:
 BEM Utility CSS Classless CSS  And countless others I haven&amp;rsquo;t even heard of.
I want to toss another one onto the mix that handles a lot of the problems I was facing with the three above.
The problem with my CSS was that I was mixing too many things:
 how to handle responsive stuff ids AND classes for styling wanting to have a coherent visual style for things like forms and buttons but still do minor tweaks here and there?</description>
    </item>
    
    <item>
      <title>A very simple roda dockerfile for development</title>
      <link>http://swlkr.github.io/posts/2021-06-16-roda-dockerfile/</link>
      <pubDate>Wed, 16 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/2021-06-16-roda-dockerfile/</guid>
      <description>A very simple roda dockerfile for development I couldn&amp;rsquo;t find a great guide for using docker / docker compose with roda in development so here&amp;rsquo;s my attempt.
Here&amp;rsquo;s the Dockerfile:
FROM ruby:3.0.1-slim-buster RUN apt-get update -qq &amp;amp;&amp;amp; apt-get install -y build-essential libsqlite3-dev RUN apt-get install -y --no-install-recommends libjemalloc2 RUN rm -rf /var/lib/apt/lists/* ENV LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libjemalloc.so.2 ARG USER=app ARG GROUP=app ARG UID=1101 ARG GID=1101 RUN groupadd --gid $GID $GROUP RUN useradd --uid $UID --gid $GID --groups $GROUP -ms /bin/bash $USER RUN mkdir -p /var/app RUN chown -R $USER:$GROUP /var/app USER $USER WORKDIR /var/app COPY --chown=$USER Gemfile* /var/app/ RUN bundle install COPY --chown=$USER .</description>
    </item>
    
    <item>
      <title>Vanilla js direct upload to S3</title>
      <link>http://swlkr.github.io/posts/2021-05-20-direct-upload-s3/</link>
      <pubDate>Thu, 20 May 2021 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/2021-05-20-direct-upload-s3/</guid>
      <description>Vanilla js direct upload to S3 I couldn&amp;rsquo;t find a great guide for getting s3 direct uploadings working with vanilla js and fetch so here is one
I use shrine for the presigning but anything will work.
S3 setup Don&amp;rsquo;t forget to set the CORS stuff and any bucket settings you want for your bucket, make sure to allow PutObject at least.
Here&amp;rsquo;s my CORS config:
[ { &amp;#34;AllowedHeaders&amp;#34;: [ &amp;#34;Authorization&amp;#34;, &amp;#34;x-amz-date&amp;#34;, &amp;#34;x-amz-content-sha256&amp;#34;, &amp;#34;content-type&amp;#34;, &amp;#34;content-disposition&amp;#34; ], &amp;#34;AllowedMethods&amp;#34;: [ &amp;#34;GET&amp;#34;, &amp;#34;PUT&amp;#34;, &amp;#34;POST&amp;#34;, &amp;#34;DELETE&amp;#34; ], &amp;#34;AllowedOrigins&amp;#34;: [ &amp;#34;*&amp;#34; ], &amp;#34;ExposeHeaders&amp;#34;: [ &amp;#34;x-amz-server-side-encryption&amp;#34;, &amp;#34;x-amz-request-id&amp;#34;, &amp;#34;x-amz-id-2&amp;#34;, &amp;#34;ETag&amp;#34; ], &amp;#34;MaxAgeSeconds&amp;#34;: 3000 } ] HTML Here&amp;rsquo;s the html, it&amp;rsquo;s just a form with a file upload</description>
    </item>
    
    <item>
      <title>Getting started with roda</title>
      <link>http://swlkr.github.io/posts/2021-05-13-getting-started-roda/</link>
      <pubDate>Thu, 13 May 2021 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/2021-05-13-getting-started-roda/</guid>
      <description>Getting started with roda TL;DR I made this handy roda-starter repo so you can make ruby websites that run faster and use less memory than rails!
I use docker in anger and in development so that&amp;rsquo;s where I&amp;rsquo;ll be starting:
Go ahead and install docker if you don&amp;rsquo;t have it already:
https://docs.docker.com/docker-for-mac/install/
Now you can use my ace Dockerfile and roda setup:
git clone https://github.com/swlkr/roda-starter ~/Projects/your_project cd your_project docker compose up # listening on http://localhost:9292 Head over to localhost:9292 and check it out!</description>
    </item>
    
    <item>
      <title>I made a free uptime monitor</title>
      <link>http://swlkr.github.io/posts/i-made-a-free-uptime-monitor/</link>
      <pubDate>Wed, 05 May 2021 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/i-made-a-free-uptime-monitor/</guid>
      <description>I made a free uptime monitor TL;DR I made a free uptime monitoring website, you can monitor any number of websites and they get checked at 5 minute intervals
I really like uptime robot. I think it&amp;rsquo;s great. Uptime monitoring as a service is super simple conceptually. Make a get request at some interval, send an email or a text message or notification or something when a site goes down. There&amp;rsquo;s all sorts of ways you can take it too.</description>
    </item>
    
    <item>
      <title>Setting up and securing a brand spankin&#39; new vps with vultr</title>
      <link>http://swlkr.github.io/posts/securing-new-vps/</link>
      <pubDate>Wed, 28 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/securing-new-vps/</guid>
      <description>Setting up and securing a brand spankin&#39; new vps with vultr I&amp;rsquo;ll try to keep this brief but here&amp;rsquo;s how I went from a fresh ubuntu 20.04 VPS on vultr to a secured VPS on vultr
Spin up a new VPS First things first, install the vultr CLI and spin up that new VPS
brew tap vultr/vultr-cli brew install vultr-cli export VULTR_API_KEY=your_api_key vultr-cli server create --region &amp;lt;region-id&amp;gt; --plan &amp;lt;plan-id&amp;gt; --os &amp;lt;os-id&amp;gt; --hostname &amp;lt;hostname&amp;gt; Secure that VPS, pronto I read somewhere that you have ~10 minutes to secure a vanilla ubuntu VPS before it gets compromised by some script kiddie or a crypto miner or something.</description>
    </item>
    
    <item>
      <title>I have to stop buying domains</title>
      <link>http://swlkr.github.io/posts/i-have-to-stop-buying-domain-names/</link>
      <pubDate>Mon, 26 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/i-have-to-stop-buying-domain-names/</guid>
      <description>I have to stop buying domains I bought three domains over the last two weeks:
 seans dot cloud isatiny dot app isatiny dot com  The first one is weird mostly because my name is not phonetic so as I soon as I bought it for $4 I knew it sucked, but it was already too late.
Hopefully the last two will be the last two I will ever buy because I own about 40 domains and I let most of the them expire every year becuase I don&amp;rsquo;t want to pay the $8/year to keep them around.</description>
    </item>
    
    <item>
      <title>Exploring the infosec industry</title>
      <link>http://swlkr.github.io/posts/web-security-industry/</link>
      <pubDate>Wed, 21 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/web-security-industry/</guid>
      <description>Exploring the infosec industry I could have also named this, what the heck is all of this b2b saas security stuff and how can I compete in this market?
I know about the edges of this market but I didn&amp;rsquo;t know (and still don&amp;rsquo;t know) a ton about how it works or what&amp;rsquo;s worth paying for, or in the words of at least one famous influencer, what&amp;rsquo;s the different between:</description>
    </item>
    
    <item>
      <title>I wrote a bare-bones, free, open source CRM</title>
      <link>http://swlkr.github.io/posts/i-wrote-a-crm/</link>
      <pubDate>Tue, 20 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/i-wrote-a-crm/</guid>
      <description>I wrote a bare-bones, free, open source CRM TL;DR I wrote a CRUD-tastic &amp;ldquo;CRM&amp;rdquo; web app to learn roda, sequel and turbo
Check it out here Check out the source here
It’s free to use, in fact it’s so free that you don’t even have to sign in to use it, just go to tinycrm.swlkr.com and BAM there it is.
How can it be free? What’s the catch? Well the catch is that very few people (if anyone) will use it, so there’s no point to try to charge money if no one is going to pay me.</description>
    </item>
    
    <item>
      <title>Tailwind is just css variables</title>
      <link>http://swlkr.github.io/posts/tailwind-is-css-variables/</link>
      <pubDate>Thu, 08 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/tailwind-is-css-variables/</guid>
      <description>Tailwind is just css variables My argument against tailwind and all atomic css is that it can be reduced even further to just using regular css and css variables. Yes you will have to use a separate file instead of your template or html file, but isn’t that what split panes are for?
I still think there is a place for atomic classes, mostly for margin/padding and things like that, but for the most part you should probably just use grid and flexbox for layout and then everything else should be a css variable.</description>
    </item>
    
    <item>
      <title>Reload roda with zeitwerk on vagrant</title>
      <link>http://swlkr.github.io/posts/reload-roda-with-zeitwerk/</link>
      <pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/reload-roda-with-zeitwerk/</guid>
      <description>Reload roda with zeitwerk on vagrant This is for anyone who is strugging with reloading roda with zeitwerk, listen and vagrant.
# config.ru require &amp;#34;roda&amp;#34; require &amp;#34;zeitwerk&amp;#34; require &amp;#34;listen&amp;#34; loader = Zeitwerk::Loader.new loader.push_dir(__dir__) loader.enable_reloading loader.setup Listen.to(__dir__, only: /\.rb$/, force_polling: true) { loader.reload }.start run -&amp;gt;(env) { loader.reload App.call(env) } This assumes an app.rb file with class App &amp;lt; Roda
You can run this with rackup in that directory, override port and host like this:</description>
    </item>
    
    <item>
      <title>Big tech is AOL now</title>
      <link>http://swlkr.github.io/posts/big-tech-is-aol-now/</link>
      <pubDate>Wed, 31 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/big-tech-is-aol-now/</guid>
      <description>Big tech is AOL now I’m old enough to remember that AOL was garbage and I never used it. This is what the mainstream internet has become. AOL.
In the 90s and early 00s America On-Line used to send compact discs in the mail urging you to get online with x number of free hours. Of course it wasn’t the actual internet, it was AOL’s gateway to it, they had their own browser, games, forums, chat, everything you’d want to do online at the time AOL had it.</description>
    </item>
    
    <item>
      <title>Reddit Tiktok</title>
      <link>http://swlkr.github.io/posts/reddit-tiktok/</link>
      <pubDate>Wed, 10 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/reddit-tiktok/</guid>
      <description>Reddit Tiktok I mashed reddit and tiktok&amp;rsquo;s ui together, complete with css scroll snap, and lazy loading on each swipe.
It&amp;rsquo;s not really a serious project, more like an example of what a mobile first, text first platform could look like. Without further ado:
 The source is here
I want to walk through the stack this project uses and how it could make deploying easy.
The stack This is in the readme as well, so didn&amp;rsquo;t want to go too much in depth here, but:</description>
    </item>
    
    <item>
      <title>One File Websites With Janet</title>
      <link>http://swlkr.github.io/posts/one-file-websites-with-janet/</link>
      <pubDate>Wed, 03 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/one-file-websites-with-janet/</guid>
      <description>One File Websites with Janet A weird, reoccurring theme on this blog and in my life is this idea of a one file website. I don&amp;rsquo;t know why I care so much, but I do. I even wrote a whole web thing on top of janet to do it! I&amp;rsquo;ll cut to the chase and give you a quick preview of what it looks like and then go over how to install it and get started on your own.</description>
    </item>
    
    <item>
      <title>RAD</title>
      <link>http://swlkr.github.io/posts/rad/</link>
      <pubDate>Sun, 24 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/rad/</guid>
      <description>RAD: The alternative to MVC No this isn’t me reminiscing about the good old days of rapid application development. This is me trying to come up with a cool, pointless acronym for an alternative way of making web applications.
Routes Actions Data You can think of this as &amp;ldquo;everything is in a rails controller method&amp;rdquo;
Routes and Actions Routes and actions are conceptually one thing.
 GET /list/todos GET /read/todo/:id GET /create/todo POST /create/todo GET /update/todo/:id POST /update/todo/:id POST /delete/todo/:id  The http method doesn&amp;rsquo;t really matter anymore, it only matters if choosing between &amp;ldquo;I want html&amp;rdquo; or &amp;ldquo;I want to change some state&amp;rdquo; / &amp;ldquo;send some data with the request&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Rails all in one file</title>
      <link>http://swlkr.github.io/posts/rails-all-in-one-file/</link>
      <pubDate>Sun, 24 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/rails-all-in-one-file/</guid>
      <description>Rails all in one file It&amp;rsquo;s actually not that bad when you put it all together.
# Migrations create_table :todos do |t| t.string :name end # app/models/todo.rb class Todo &amp;lt; ApplicationRecord end # app/controllers/todos_controller.rb class TodosController &amp;lt; ApplicationController def index @todos = Todo.all end def new @todo = Todo.new end def create @todo = Todo.new(todo_params) if @todo.save redirect_to todos_path else render :new end end private def todo_params params.require(:todo).permit(:name) end end # app/views/new.</description>
    </item>
    
    <item>
      <title>tw</title>
      <link>http://swlkr.github.io/posts/tw/</link>
      <pubDate>Mon, 04 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/tw/</guid>
      <description>tw Just wanted to give a little update on my tailwind experiments from a couple of months ago: https://swlkr.com/posts/tailwind-css-as-a-style-database/
I&amp;rsquo;ve streamlined it quite a bit and store the classes in memory instead of a separate file. So you can write the tailwind styles inline or wherever, just be sure to call two (or three functions).
Let&amp;rsquo;s say you&amp;rsquo;re writing some janet-html and you want to use tailwind to style some things.</description>
    </item>
    
    <item>
      <title>NEW MAGIC</title>
      <link>http://swlkr.github.io/posts/new-magic/</link>
      <pubDate>Thu, 17 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/new-magic/</guid>
      <description>NEW MAGIC What is it?! What is the NEW MAGIC referenced in this tweet:
The HEY stack:
- Vanilla Ruby on Rails on the backend, running on edge
- Stimulus, Turbolinks, Trix + NEW MAGIC on the front end
- MySQL for DB (Vitess for sharding)
- Redis for short-lived data + caching
- ElasticSearch for indexing
- AWS/K8S
&amp;mdash; DHH (@dhh) June 24, 2020  Most people in the replies seem to think it&amp;rsquo;s some kind of combination of stimulusjs over websockets?</description>
    </item>
    
    <item>
      <title>Low Code Server Side Websites</title>
      <link>http://swlkr.github.io/posts/low-code-server-side-websites/</link>
      <pubDate>Wed, 09 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/low-code-server-side-websites/</guid>
      <description>Low Code Server Side Websites One overarching goal of mine ever since I got into this web development game &amp;gt; 10 years ago after graduating as an electrical engineer was to make making websites the easiest it could possibly be. I started with rails, and that isn&amp;rsquo;t the easiest place to start if you don&amp;rsquo;t already understand:
 sql html css javascript html forms http background jobs websockets  and how each of those parts fit together to make a great website or I guess you could call them web apps.</description>
    </item>
    
    <item>
      <title>SaaS is TaaS</title>
      <link>http://swlkr.github.io/posts/trust-as-a-service/</link>
      <pubDate>Fri, 20 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/trust-as-a-service/</guid>
      <description>SaaS is TaaS After trying and failing for quite a while, much longer than most people to build a SaaS, you could say i’m SaaD. I’ve also learned a thing or two about failing, and one thing i’ve learned is that software businesses aren’t really about software, they’re about trust.
 Build an audience Work in public High touch sales  All of those things are the same thing. They’re helping you build trust between you and your future customers.</description>
    </item>
    
    <item>
      <title>Is the free market failing us?</title>
      <link>http://swlkr.github.io/posts/is-the-free-market-failing-us/</link>
      <pubDate>Mon, 09 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/is-the-free-market-failing-us/</guid>
      <description>Is the free market failing us? I recently listened to the joe rogan podcast with tristan harris and one thing I kept thinking about when they mentioned regulating tech companies, specifically social media companies, was that the free market experiment has succeeded, but failed us as humans in other ways.
A few years back, much like most hardcore hacker news readers, I read a book by Ayn Rand called Atlas Shrugged.</description>
    </item>
    
    <item>
      <title>Joy Web Framework Manifesto</title>
      <link>http://swlkr.github.io/posts/joys-manifesto/</link>
      <pubDate>Thu, 22 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/joys-manifesto/</guid>
      <description>The Joy Web Framework Manifesto I&amp;rsquo;m not really a manifesto person, but here it is anyway. Wasn&amp;rsquo;t sure what else to call it. Principles maybe?
 RFD (routes, functions, database) LoB (locality of behavior) MOIST (move other interdependent stacks together)  RFD as opposed to MVC Routes, Functions and Database
Usually you map controllers and models to database tables, but then it starts falling apart when you want something that combines multiple tables together or is a weird mix of having to modify n tables in a single request.</description>
    </item>
    
    <item>
      <title>Turning bullseye into a SaaS app</title>
      <link>http://swlkr.github.io/posts/turning-bullseye-into-an-app/</link>
      <pubDate>Tue, 13 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/turning-bullseye-into-an-app/</guid>
      <description>Foreword I wrote this in like 10 minutes and it&amp;rsquo;s a very rough outline of how I think about new side projects after years of failure. Oh I&amp;rsquo;m also still failing so don&amp;rsquo;t take this as a good way to think about your side projects.
Anyway I thought this might be useful to look back on if I ever thought, &amp;ldquo;how come I never made a profitable web app?&amp;rdquo;.
The main takeaway from this is how I outline the different phases:</description>
    </item>
    
    <item>
      <title>Tailwind CSS as a Style Database</title>
      <link>http://swlkr.github.io/posts/tailwind-css-as-a-style-database/</link>
      <pubDate>Mon, 05 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/tailwind-css-as-a-style-database/</guid>
      <description>Tailwind CSS as a Style Database I was messing around with how to make web apps more quickly, like always, and I found a way to use hiccup, janet bindings and tailwind to do it.
How does it work? There are two janet files:
 html.janet classes.janet  classes.janet is responsible for taking the styles from the html.janet file, grabbing them from the tailwind.all.min.css file, taking only the styles that are in use and making a smaller tailwind.</description>
    </item>
    
    <item>
      <title>Circular Webcams in Twitch &amp; OBS</title>
      <link>http://swlkr.github.io/posts/twitch-obs-circle-webcam/</link>
      <pubDate>Wed, 23 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/twitch-obs-circle-webcam/</guid>
      <description>Circular Webcams in Twitch &amp;amp; OBS This took me a quick minute, but it was pretty easy and you don&amp;rsquo;t even need any special OBS software!
Here&amp;rsquo;s how to do it.
Make two shapes in something like figma or sketch, one that is a rectangle the resolution of your camera, make that one transparent. Another that is a circle whatever color you want, that&amp;rsquo;s where the camera will go, it should look like this:</description>
    </item>
    
    <item>
      <title>Joy vs Rails</title>
      <link>http://swlkr.github.io/posts/joy-vs-rails/</link>
      <pubDate>Mon, 14 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/joy-vs-rails/</guid>
      <description>Joy vs Rails Here are some things that you do in rails and how to do them in joy:
Routing The rails way: # routes.rb get &amp;#39;/&amp;#39; =&amp;gt; &amp;#39;home#index&amp;#39; # app/controllers/home.rb class HomeController &amp;lt; ApplicationController def index; end end # app/views/home/index.html.erb &amp;lt;h1&amp;gt;Home&amp;lt;/h1&amp;gt; Just want to point out, that&amp;rsquo;s three different files for one route
The joy way: ; # routes/pages.janet (route :get &amp;#34;/&amp;#34; :home) (defn home [request] [:h1 &amp;#34;Home&amp;#34;]) Database Migrations The rails way class CreatePostsTable &amp;lt; ActiveRecord::Migration[5.</description>
    </item>
    
    <item>
      <title>The internet sucks now; how to fix it</title>
      <link>http://swlkr.github.io/posts/internet-sucks-now/</link>
      <pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/internet-sucks-now/</guid>
      <description>The internet sucks now; how to fix it I&amp;rsquo;ve been a programmer since I was kid, I&amp;rsquo;m in a unique position, because I&amp;rsquo;m old enough to have seen the internet since it went commercial from the ARPANET in the early 90s and young enough to understand the appeal of things like tiktok. So that makes my advice ✨priceless ✨haha.
It&amp;rsquo;s grown into a monster since the 90s with things like javascript and the advertising economy.</description>
    </item>
    
    <item>
      <title>SBT Native Packager</title>
      <link>http://swlkr.github.io/posts/sbt-native-packager/</link>
      <pubDate>Tue, 25 Aug 2020 10:24:27 -0600</pubDate>
      
      <guid>http://swlkr.github.io/posts/sbt-native-packager/</guid>
      <description>Add SBT Native Packager To Your Scala Project Ever work on a scala project? Ever wanted to turn it into a Docker image without writing a Dockerfile?
Well then, this short but sweet tutorial has you covered!
First things first, the assumption is that you have an existing scala project.
Next things next, go ahead and:
touch project/plugins.sbt And add the following line to that newly created project/plugins.sbt
addSbtPlugin(&amp;#34;com.typesafe.sbt&amp;#34; % &amp;#34;sbt-native-packager&amp;#34; % &amp;#34;1.</description>
    </item>
    
    <item>
      <title>That Time I Lost A month&#39;s Worth of Posts</title>
      <link>http://swlkr.github.io/posts/that-time-i-lost-a-months-worth-of-posts/</link>
      <pubDate>Wed, 19 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/that-time-i-lost-a-months-worth-of-posts/</guid>
      <description>That Time I Lost A month&amp;rsquo;s Worth of Posts Remember that one time I decided to start blogging in earnest on my own domain as a static hugo site but I changed computers and didn&amp;rsquo;t push the source changes to github so I lost a month&amp;rsquo;s worth of blog posts?
Good times.
It&amp;rsquo;s actually kind of funny because I wrote this whole 6 part series on cloning twitter but it wasn&amp;rsquo;t really that good, I kind of phoned home for most of it, I don&amp;rsquo;t have to worry about it anymore though, because that&amp;rsquo;s that.</description>
    </item>
    
    <item>
      <title>Janet Basics</title>
      <link>http://swlkr.github.io/posts/janet-basics/</link>
      <pubDate>Thu, 02 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/janet-basics/</guid>
      <description>Janet Basics ; # A pound sign (or hashtag) starts a one-line comment. ; # I&amp;#39;m using clojure&amp;#39;s ; comments because chroma doesn&amp;#39;t support janet (comment Wrapping something in the comment form makes a multiline comment) Variables and flow control (def num 42) ; # All numbers are double precision floating point numbers &amp;#34;A few more numbers&amp;#34; (def num1 10_000) ; # you can use underscores as decimal places, like ruby (def s &amp;#34;the good place&amp;#34;) ; # Immutable strings (def s `Backticks start/end multine strings`) ; # backticks for multiline strings (def t nil) ; # nil is a thing ; # loops can be done with either map, loop or while (while (&amp;lt; i 50) (++ i)) ; # If clauses: (if (&amp;gt; num 40) (print &amp;#34;over 40&amp;#34;) (do (if (not= s &amp;#34;the good place&amp;#34;) (print &amp;#34;not over 40&amp;#34;) ; # you don&amp;#39;t need a second form necessarily (var this-is-local 5)))) ; # variables are lexically scoped by default ; # How to make a variable global (to a file) ; # outside of any do&amp;#39;s or any loops or anything (var x &amp;#34;im global&amp;#34;) ; # String concatentation uses the (string) or (print) forms (string &amp;#34;winter is coming &amp;#34; &amp;#34;quickly&amp;#34;) ; # =&amp;gt; &amp;#34;winter is coming quickly&amp;#34; (print &amp;#34;winter is coming&amp;#34; &amp;#34;quickly&amp;#34;) ; # =&amp;gt; &amp;#34;winter is comingquickly&amp;#34; ; # Undefined variables throw errors.</description>
    </item>
    
    <item>
      <title>WWDC 2020</title>
      <link>http://swlkr.github.io/posts/wwdc-2020/</link>
      <pubDate>Wed, 24 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/wwdc-2020/</guid>
      <description>WWDC 2020 Besides being the saddest wwdc keynote in history it was the first pre-recorded one, which doesn’t take away from the spectacle so much as it takes away from the need to watch a &amp;ldquo;live stream.&amp;rdquo;
macOS BS There’s quite a few hot takes on iOS and it’s not super interesting to me, so I’m going to start with MacOS Big Sur. It looks great! The dark gray window chrome was getting a little long in the tooth, the new title bars are a lot better.</description>
    </item>
    
    <item>
      <title>HEY and back to the future</title>
      <link>http://swlkr.github.io/posts/hey-and-back-to-the-future/</link>
      <pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/hey-and-back-to-the-future/</guid>
      <description>HEY and back to the future I don&amp;rsquo;t know if you&amp;rsquo;ve seen the new HEY email service yet, but you should take a minute to watch this video or at the very least, take a look at this screenshot
So a few things jump out at me immediately. The first is, WOW this is a clean design. It&amp;rsquo;s pretty effortlessly 2020&amp;rsquo;s aestethic. Barely any borders, almost same font weight throughout, circle photos everywhere, and a TON of whitespace.</description>
    </item>
    
    <item>
      <title>I Closed My LinkedIn</title>
      <link>http://swlkr.github.io/posts/i-closed-my-linkedin/</link>
      <pubDate>Thu, 11 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/i-closed-my-linkedin/</guid>
      <description>I Closed My LinkedIn I saw a post from PC Maffey and it was weird because I closed my linked in the same day. I imagine this happens all the time, just no one writes about it.
Since I&amp;rsquo;m writing weekly now, I should probably take more notes throughout the week of things that happen and then on wednesday look at what happened and just pick something interesting (or make it interesting to write about).</description>
    </item>
    
    <item>
      <title>Better Social Media</title>
      <link>http://swlkr.github.io/posts/better-social-media/</link>
      <pubDate>Fri, 05 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/better-social-media/</guid>
      <description>Better social media Current social media services suck. Too much noise, too much social pressure to conform, too much. If I’ve learned anything from indie hacking, it’s that scale is not always a good goal to have. By scale I mean infinite scale, global scale, galactic scale. It never turns out well, if you make something for everyone, you make something for no one. That’s precisely what social media is, a no-man’s land of pot shots, overt racism, against people from all walks of life, and extremists views from all sides.</description>
    </item>
    
    <item>
      <title>The making of ridge.css</title>
      <link>http://swlkr.github.io/posts/the-making-of-ridge-css/</link>
      <pubDate>Thu, 28 May 2020 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/the-making-of-ridge-css/</guid>
      <description>The making of ridge.css As with most things I do at the computer, this was born out of frustration with existing tooling.
If I had to order my fustrations, they would roughly fall in this order:
 rails bootstrap tachyons / tailwind / atomic css react.js multi-file web app development  I&amp;rsquo;ve been tackling these one by one, by either switching to something else that already exists or making my own:</description>
    </item>
    
    <item>
      <title>JanetDocs</title>
      <link>http://swlkr.github.io/posts/janet-docs/</link>
      <pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/janet-docs/</guid>
      <description>JanetDocs Writing janet docs went pretty well! At this point in my little web framework’s journey, I only had to add a little code to get it working, (ghetto wildcard routing) so that’s good, hopefully on the next project I won’t have to add any.
I’m really starting to pick up steam on how fast I can make a new website&amp;hellip; I mean &amp;ldquo;web app&amp;rdquo;. It took me 8 real-time days start to finish, probably about ~16 hours total.</description>
    </item>
    
    <item>
      <title>Joy Routes as Functions</title>
      <link>http://swlkr.github.io/posts/joy-routes-as-functions/</link>
      <pubDate>Thu, 14 May 2020 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/joy-routes-as-functions/</guid>
      <description>Joy Routes as Functions
I&amp;rsquo;m working on a community site for janet documentation and examples, kind of like clojuredocs, but with more janet.
I&amp;rsquo;m also trying to livestream or at least record me working on it and one thing I really wanted to focus on was rapid development. What is the least amount of keystrokes I can make to get something up and running with joy. I&amp;rsquo;ve made a few changes to joy recently that really helps any dev move very quickly with routing.</description>
    </item>
    
    <item>
      <title>Ask Janet</title>
      <link>http://swlkr.github.io/posts/ask-janet/</link>
      <pubDate>Thu, 07 May 2020 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/ask-janet/</guid>
      <description>Ask Janet The question in a world of abundance is &amp;ldquo;why?&amp;rdquo;. What is the point of making yet another website?
Well, I don&amp;rsquo;t have 1500 reputation on stackoverflow, so I can&amp;rsquo;t make a janet tag, and I would also like to stop searching through gitter for questions/answers. I feel like those are perfectly reasonable reasons to make a website.
With that, I set out to use my ✨shiny ✨new web framework joy to recreate some of the bits of SO, but specifically for janet.</description>
    </item>
    
    <item>
      <title>AlpineJS Confirm Modals</title>
      <link>http://swlkr.github.io/posts/alpine-confirm-modal/</link>
      <pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/alpine-confirm-modal/</guid>
      <description>Easy alpinejs confirm modals I was looking for a decent way to define &amp;ldquo;confirm modals&amp;rdquo; with alpine, you know those modals that pop up when you&amp;rsquo;re about to do something destructive to the database, like delete your facebook or instagram account? Those ones.
I stumbled on something pretty bare bones, but it works well:
Here&amp;rsquo;s the css:
:root { --background-body: #202b38; } .md-modal { position: fixed; top: 50%; left: 50%; width: 50%; max-width: 630px; min-width: 320px; margin: 0 auto; transform: translate(-50%, -50%); z-index: 2; background-color: var(--background-body); } .</description>
    </item>
    
    <item>
      <title>Making Low Memory Websites</title>
      <link>http://swlkr.github.io/posts/low-memory-websites/</link>
      <pubDate>Wed, 22 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/low-memory-websites/</guid>
      <description>I&amp;rsquo;ve been working on my second home grown janet web framework so I can run multiple websites on a single raspberry pi in my closet.
My first web framework in this vein (which I&amp;rsquo;m still working on) is joy.
So, you know go smash that star button on github or something.
This next web framework does a lot less. It doesn&amp;rsquo;t have database stuff built in, you can&amp;rsquo;t control the middleware very well, and it requires a lot less typing than joy.</description>
    </item>
    
    <item>
      <title>Is email decentralized?</title>
      <link>http://swlkr.github.io/posts/email/</link>
      <pubDate>Wed, 15 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/email/</guid>
      <description>Is email decentralized? TL;DR No it’s not.
I doubt the trend will reverse with networked technology of any kind, no matter how much a bunch of nerds on HN want it to. The truth is email has been centralized the day aol came on the scene.
This is the real problem with decentralized anything, coins, land, water. If you can control the majority of it, you can change the rules of the game.</description>
    </item>
    
    <item>
      <title>AlpineJS</title>
      <link>http://swlkr.github.io/posts/alpinejs/</link>
      <pubDate>Wed, 08 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/alpinejs/</guid>
      <description>AlpineJS Not only do I love the name, I love the concept. If you’re going to add interactivity to your website, you may as well do it in the html instead of rendering everything in javascript.
The concept behind alpine is similar to vue and angular but it takes a step back and reduces everything (at this time of writing anyway) to functions and data, alarm bells are going off because that’s the same thing as janet/clojure.</description>
    </item>
    
    <item>
      <title>Classless CSS</title>
      <link>http://swlkr.github.io/posts/classless-css/</link>
      <pubDate>Wed, 01 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/classless-css/</guid>
      <description>Classless CSS You’ve heard of tailwind and maybe tachyons, functional css, or atomic css. Well the next step is classless css.
But Sean, what does that mean?!
I’ll tell you what it means.
It means, you just write html and that’s it, no classes, no inline styles, just html. It’s the way things were always meant to be™️. We’ve come full circle. Or maybe it’s just me and my MVPs coming full circle.</description>
    </item>
    
    <item>
      <title>My Cheap Server Journey</title>
      <link>http://swlkr.github.io/posts/cheap-server-journey/</link>
      <pubDate>Wed, 25 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/cheap-server-journey/</guid>
      <description>My Cheap Server Journey TL;DR I was using Heroku then cheap VPS&amp;rsquo;s but I wanted to see if I could get my monthly costs down to $0 and I did.
Let&amp;rsquo;s start with what the goal is here. The goal is to run several high touch (in terms of customer acquisition/support), low traffic SaaS apps (read: expensive), possibly 10-20 apps all said and done, all self service with sales and support by yours truly.</description>
    </item>
    
    <item>
      <title>The future of user interfaces</title>
      <link>http://swlkr.github.io/posts/the-future-of-user-interfaces/</link>
      <pubDate>Wed, 18 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/the-future-of-user-interfaces/</guid>
      <description>The future of user interfaces How do we really want to interact with computers? I don’t actually want to tap on a screen, I actually want to&amp;hellip;
 write a blog post record music write some code watch a video listen to a podcast  So how do I do these things today? I figure out an app to do the thing and then I remember the icon and the name and tap it.</description>
    </item>
    
    <item>
      <title>Clojure isnt for me</title>
      <link>http://swlkr.github.io/posts/clojure-isnt-for-me/</link>
      <pubDate>Wed, 11 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/clojure-isnt-for-me/</guid>
      <description>Clojure isn&amp;rsquo;t for me I’m writing here today to tell you about my five year long obsession with clojure and why I recently quit obsessing over it.
The truth is, I knew it was never for me.
 I wasn’t a java programmer before I found clojure, I was a ruby (on rails) programmer. I don&amp;rsquo;t write enterprise web apps as my side projects I don&amp;rsquo;t need web scale resource hungry web server architectures   To the people who have never programmed in either ecosystem, they look pretty similar, but the reality of working with each of them daily is a lot more nuanced than that.</description>
    </item>
    
    <item>
      <title>JAMStack</title>
      <link>http://swlkr.github.io/posts/jamstack/</link>
      <pubDate>Wed, 04 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/jamstack/</guid>
      <description>JAMStack It’s been around for a while and I just figured it out, I’m an old, grumpy programmer now.
So, static sites right? I mean that’s fine, jekyll has been around forever. It’s a little more than that, but not much more, I can sum it up in one sentence:
Do almost everything at build time.
So let’s say you have something like today in clojure. It’s a list of links pulled in from various APIs.</description>
    </item>
    
    <item>
      <title>The web is a ghetto</title>
      <link>http://swlkr.github.io/posts/the-web-is-a-ghetto/</link>
      <pubDate>Wed, 26 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/the-web-is-a-ghetto/</guid>
      <description>The web is a ghetto You ever ask yourself, fellow HNer, why people use apps on their phones instead of websites? No? I’ll tell you anyway, because the web is a ghetto.
In a word, ads. There’s too many of them. The web actually works very poorly without them. Try online shopping with ads blocked, it’s impossible. So I’m sure between affiliate links and articles full of ads, somewhere in there people realized instagram is bad, sure but at least the ads are predictable and not jumping up and down on the screen asking them to install apps or consent to cookies.</description>
    </item>
    
    <item>
      <title>The Static Web</title>
      <link>http://swlkr.github.io/posts/the-static-web/</link>
      <pubDate>Tue, 25 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>http://swlkr.github.io/posts/the-static-web/</guid>
      <description>The static web You know it’s funny, I’ve been programming web &amp;ldquo;applications&amp;rdquo; for a decade now and just this year I’ve given up on them. Some of the ideas behind web apps were revolutionary at the time, stateless user interfaces, where the state isn’t stored in the application in memory, but on the server and in the database. There’s a lot to love about web applications, and a lot to hate.</description>
    </item>
    
  </channel>
</rss>
